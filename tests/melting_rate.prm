#########################################################
# This is a test for the melting rate functionality
# It uses a new material model similar to the melt
# simple model, but with a different melting rate.

# The melting rate has the form of a Gaussian function
# and every timestep a fixed amount of material is melting.

# The amplitude of the Gaussian is 0.0001, so both the
# porosity and the peridotite field should increase by
# this amount (visible in the maximum value).

# Note that the maximum porosity can deviate slightly,
# as additional melt is created bx compaction.
############### Global parameters

set Dimension                              = 2
set Start time                             = 0
set End time                               = 200
set Use years instead of seconds           = true
set Adiabatic surface temperature          = 1600
set Nonlinear solver scheme                = iterated Advection and Stokes
set Max nonlinear iterations               = 3
set CFL number                             = 0.01
set Pressure normalization                 = surface
set Surface pressure                       = 0

############### Parameters describing the model
# Let us here choose again a box domain
# where we fix the temperature at the bottom and top,
# allow free slip along the boundaries
# and include melt migration.

subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 200000
    set Y extent = 100000
    set X repetitions = 2
  end
end

subsection Boundary temperature model
  set Fixed temperature boundary indicators   = 2, 3
  set List of model names = box

  subsection Box
    set Bottom temperature = 1600
    set Top temperature    = 293
  end
end

subsection Boundary velocity model
  set Tangential velocity boundary indicators = 0, 1, 2, 3
end

subsection Melt settings
  set Include melt transport = true
end

############### Compositional fields
# We want to use two compositional fields, the porosity and
# an additional field, to check if the melting rate functionality
# has the same effect as the reaction term for the other
# compositional fields. As the porosity field is advected by
# a different mechanism, slight differences between the fields
# are expected.
subsection Compositional fields
  set Number of fields = 2
  set Names of fields = porosity, peridotite
end

# We then choose a vertical gravity model and describe the
# initial temperature with a vertical gradient.
subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 10.0
  end
end

subsection Initial temperature model
  set Model name = adiabatic

  subsection Adiabatic
    set Age top boundary layer      = 1e6

    subsection Function
      set Function expression       = 0;0
    end
  end
end

subsection Initial composition model
  set Model name = function

  subsection Function
    set Variable names      = x,y
    set Function constants  = pi=3.1415926,x0=100000,y0=50000,c=10000
    set Function expression = 0.2 * exp(-((x-x0)*(x-x0)+(y-y0)*(y-y0))/(2*c*c)); 0.2 * exp(-((x-x0)*(x-x0)+(y-y0)*(y-y0))/(2*c*c))
  end
end

subsection Material model
  set Model name = melting rate
end

# The final part of this input file describes how many times the
# mesh is refined and what to do with the solution once computed
subsection Mesh refinement
  set Initial adaptive refinement        = 0
  set Initial global refinement          = 4
  set Time steps between mesh refinement = 0
end

subsection Postprocess
  set List of postprocessors = composition statistics, visualization

  subsection Visualization
    set Interpolate output = false
    set List of output variables      = material properties, melt material properties
    set Number of grouped files       = 0
    set Output format                 = vtu
    set Time between graphical output = 0

    subsection Melt material properties
      set List of properties = permeability, fluid density, compaction viscosity, fluid viscosity
    end

    subsection Material properties
      set List of material properties = density, viscosity, thermal expansivity
    end
  end
end

subsection Solver parameters
  subsection Stokes solver parameters
    set Use direct solver for Stokes system = true
  end
end
