# Like the poiseuille_2d.prm test and based on the nonlinear channel
# flow benchmark. This is used to test the velocity boundary conditions
# of the Newton Stokes solver.

set Output directory = vp_input_v_2_new
set Dimension = 2
set CFL number                             = 1.0
set Maximum time step                      = 1
set End time                               = 0
set Start time                             = 0
set Adiabatic surface temperature          = 1
set Surface pressure                       = 0
set Use years instead of seconds           = false
set Nonlinear solver scheme = iterated Advection and Newton Stokes
set Max nonlinear iterations = 150
set Nonlinear solver tolerance = 5e-12

subsection Solver parameters
  subsection Stokes solver parameters
    set Linear solver tolerance = 1e-5
    set Stokes solver type = block AMG
  end

  subsection Newton solver parameters
    set Max pre-Newton nonlinear iterations = 10
    set Nonlinear Newton solver switch tolerance = 1e-20
    set Max Newton line search iterations = 0
    set Maximum linear Stokes solver tolerance = 1e-2
    set Use Newton residual scaling method = false
    set Use Newton failsafe = false
    set Stabilization preconditioner = SPD
    set Stabilization velocity block = SPD
  end
end

subsection Boundary temperature model
  set List of model names = box
  set Fixed temperature boundary indicators   = 2, 3

  subsection Box
    set Left temperature = 1
  end
end

subsection Initial temperature model
  set Model name = function

  subsection Function
    set Function expression = 1
  end
end

subsection Gravity model
  set Model name = vertical

  subsection Vertical
    set Magnitude = 0
  end
end

subsection Geometry model
  set Model name = box

  subsection Box
    set X extent = 10e3
    set Y extent = 8e3
    set Y repetitions = 1
  end
end

subsection Material model
  set Model name = visco plastic
  set Material averaging = none

  subsection Visco Plastic
    set Viscous flow law = dislocation
    set Minimum viscosity = 1e19
    set Maximum viscosity = 1e24
    set Prefactors for diffusion creep = 1
    set Prefactors for dislocation creep = 1e-37
    set Grain size exponents for diffusion creep = 0
    set Activation energies for diffusion creep = 0
    set Activation energies for dislocation creep = 0
    set Activation volumes for diffusion creep = 0
    set Activation volumes for dislocation creep = 0
    set Stress exponents for dislocation creep = 3
  end
end

subsection Mesh refinement
  set Initial adaptive refinement        = 0
  set Initial global refinement          = 2
end

subsection Boundary velocity model
  set Zero velocity boundary indicators       = 0, 1
  set Prescribed velocity boundary indicators = 2: function, 3: function # velocity bc

  subsection Function
    set Function constants = n = 3
    set Variable names = x,z

    # For velocity boundary conditions both are used, for pressure boundary conditions only the first (x) component
    set Function expression = 0;(1e-37/(n+1))*((1e9/8e3)^n)*(((5e3)^(n+1))-(abs(x-(5e3))^(n+1)));
  end
end

subsection Boundary traction model
  subsection Function
    set Variable names = x,z

    # We want to prescribe a pressure of 2 at the left boundary
    # and -2 at the right boundary.
    # The traction in this case is defined as:
    # tau =  - pressure * normal_vector.
    # On the left boundary, the outward pointing normal vector is
    # (-1;0). On the right (1;0).
    # Therefore:
    # Left boundary:  tau = - pressure(left) (-1;0) = - (2) (-1;0) = (2;0).
    # Right boundary: tau = - pressure(right) (1;0) = - (-2) (1;0) = (2;0).
    # Conveniently, the traction is the same on both boundaries.
    set Function expression = 0;if(z>0,0,1e9)
  end
end
